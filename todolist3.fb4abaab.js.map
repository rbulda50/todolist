{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_define_property.js","node_modules/@swc/helpers/lib/_object_spread.js","node_modules/nanoid/index.browser.js","src/js/todolist3.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _objectSpread;\nvar _defineProperty = _interopRequireDefault(require(\"./_define_property\"));\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === 'function') {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            (0, _defineProperty).default(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { nanoid } from \"nanoid\";\n\n\nconst tasksContainer = document.querySelector('.tasks');\n\ntasksContainer.innerHTML = `\n    <form class=\"todo-list\">\n    <header class=\"header\">\n        <input class=\"header__input\" type=\"text\" placeholder=\"Enter an activity..\">\n        <button type=\"submit\" class=\"header__button\"><i class=\"fa fa-plus\"></i></button>\n    </header>\n    <main class=\"list-container\">\n        <ul class=\"list current-list\"></ul>\n        <ul class=\"list done-list\"></ul>\n    </main>\n    </form>\n`\n\nconst refs = {\n    todoForm: document.querySelector('.todo-list'),\n    inputForm: document.querySelector('.header__input'),\n    listContainer: document.querySelector('.list-container'),\n    currentList: document.querySelector('.current-list'),\n    doneList: document.querySelector('.done-list'),\n}\n\nrefs.todoForm.addEventListener('submit', onFormSubmit);\nrefs.listContainer.addEventListener('click', taskContainerOnClick);\n\nlet tasks = [];\n\nfunction onFormSubmit(e) {\n    e.preventDefault();\n    addTodo(refs.inputForm.value.trim());\n    refs.inputForm.value = '';\n};\n\nfunction addTodo(value) {\n    if (value) {\n        const task = { id: nanoid(), value: value, done: false };\n        tasks.push(task);\n        addToLocalStorage(tasks);\n    };\n};\n\nfunction addToLocalStorage(tasks) {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n    renderTasks(tasks);\n};\n\nfunction getFromLocalStorage() {\n    const tasksRefs = localStorage.getItem('tasks');\n    if (tasksRefs) {\n        tasks = JSON.parse(tasksRefs);\n        renderTasks(tasks);\n    };\n};\ngetFromLocalStorage();\n\nfunction renderTasks() {\n    const getItem = ({ id, value, done }) => \n            `\n    <li class=\"list__item\" data-id=\"${id}\" data-done=\"${done}\">\n        <span class=\"list__item-name\">${value}</span>\n        <div class=\"list__buttons\">\n          <i class=\"list__button remove fa fa-trash-o\" data-action=\"remove\"></i>\n          <span class=\"list__bar\">|</span>\n          <i \n            class=\"${`list__button fa ${done ? 'uncomplete fa-check-circle' : 'complete fa-check-circle-o'}`}\"\n            data-action=\"toggle\"\n          ></i>\n        </div>\n     </li>\n    `\n        const todoTasks = tasks.filter(({ done }) => !done);\n        const doneTasks = tasks.filter(({ done }) => done);\n\n        refs.currentList.innerHTML = todoTasks.map(getItem).join('');\n        refs.doneList.innerHTML = doneTasks.map(getItem).join('');\n};\n\nfunction updateTasks(tasks) {\n    tasks = tasks;\n    addToLocalStorage(tasks);\n    getFromLocalStorage();\n};\n\nfunction taskContainerOnClick(e) {\n    const taskRef = e.target.closest('.list__item[data-id]');\n    // console.log(taskRef);\n    if (taskRef) {\n        if (e.target.dataset.action === \"toggle\") {\n            toggleTask(taskRef.dataset.id);\n            // console.log(taskRef.dataset.id);\n        };\n\n        if (e.target.dataset.action === 'remove') {\n            removeTask(taskRef.dataset.id);\n        };\n    };\n}\n\nfunction toggleTask(id) {\n    const items = tasks.map((task) => {\n        if (task.id === id) {\n            return {\n                ...task,\n                done: !task.done,\n            }\n        };\n        return task;\n    });\n        updateTasks(items);\n};\n\nfunction removeTask(id) {\n    const items = tasks.filter(item => {\n        return item.id !== id;\n    })\n    updateTasks(items);\n}"],"names":["Object","defineProperty","module","exports","value","default","obj","key","enumerable","configurable","writable","$9eddae5a012cde57$exports","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","$9eddae5a012cde57$var$_defineProperty","parcelRequire","__esModule","$8069ef7e6126e429$export$ac4959f4f1338dfc","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","document","querySelector","innerHTML","$0311dc360bcd0ba5$var$refs","todoForm","inputForm","listContainer","currentList","doneList","addEventListener","e","preventDefault","task","done","$0311dc360bcd0ba5$var$tasks","push","$0311dc360bcd0ba5$var$addToLocalStorage","$0311dc360bcd0ba5$var$addTodo","trim","taskRef","closest","dataset","action","$0311dc360bcd0ba5$var$updateTasks","map","$parcel$interopDefault","item","$0311dc360bcd0ba5$var$removeTask","tasks1","localStorage","setItem","JSON","stringify","$0311dc360bcd0ba5$var$renderTasks","$0311dc360bcd0ba5$var$getFromLocalStorage","tasksRefs","getItem","parse","param","todoTasks","doneTasks","join","tasks2"],"version":3,"file":"todolist3.fb4abaab.js.map"}